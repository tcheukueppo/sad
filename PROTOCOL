Command reference
=================

NOTE: All commands will return some optional output followed by OK on success or
ERR followed by an error message on failure.

random
Select random playback mode.  By default the daemon is in a repeat mode where it cycles
through the playlist endlessly.

repeat
Set repeat mode.  Just cycle through the playlist.

volume 0-100
Set the output volume.  This is applied equally to all outputs.

next
Play next song.

pause 0|1
Pause currently playing song.

play [ID]
Play the song with the given ID or the current song if no ID is provided.

prev
Play previous song.

stop
Stop playback.

add ID
Add the given song ID from the library to the playlist.

clear
Clear playlist and stop playback.

empty
Empty the library, clear playlist and stop playback.

remove [ID]
Delete the song with the given ID or if ID is not given, the currently
selected song from the playlist.

playlist
Dump the current playlist.  The output has the following form:
"%d: %s\n", id, filepath

library
Dump the library.  The output has the following form:
"%d: %s\n", id, filepath

search regex
Search for a song matching the given regex in the library.  At the moment it
will only consider file names.

learn path
Add the path to library.

forget ID
Forget the song with the given ID from the library.

close
Force the daemon to close the client connection.

kill
Kill the daemon.

ping
The daemon will reply with pong.

uptime
Number of seconds the daemon has been running.

version
The sad protocol version.

enable output
Enable the given output.  Every decoded buffer will be written to all
enabled outputs.

disable output
Disable the given output.

status [state]
Query state information from the daemon.  The optional argument state
identifies what information should be returned.  If not specified, all of the
state information is returned.  The format of the reply is:
"%s: %s\n", statevar, infomsg

Possible states:
	random: 1 if random mode is set 0 otherwise
	repeat: 1 if repeat mode is set 0 otherwise
	single: 1 if single mode is set 0 otherwise
	songid: songid of the current song stopped on or playing
	playback: either play, stop or pause
	volume: 0-100
	elapsed: total time elapsed within current song in seconds
	duration: total song duration in seconds

wait event-name
Subscribe to the provided event.  When the event triggers, a reply will
be sent back to the client.  Events are not queued.  The reply has the form:
"event: %s\n", eventname
